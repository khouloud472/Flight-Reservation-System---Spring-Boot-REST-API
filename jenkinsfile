pipeline {
    agent any

    environment {
        APP_NAME = "Flight-Reservation-System"
        JAR_NAME = "reservationavion.jar"
    }

    tools {
        maven 'Maven' // Nom exact dans Jenkins
        jdk 'JDK17'    // Nom exact de Java configur√©
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/khouloud472/Flight-Reservation-System---Spring-Boot-REST-API.git',
                    credentialsId: 'github-token' // Ton credential GitHub
            }
        }

        stage('Build') {
    steps {
        script {
            try {
                sh 'mvn clean compile'
            } catch (err) {
                echo "‚ùå Erreur Maven : ${err}"
                error("Build failed")
            }
        }
    }
}


        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package -DskipTests'
            }
            post {
                always {
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }

        stage('Deploy (Local)') {
            steps {
                echo 'üöÄ Lancement de l‚Äôapplication...'
                sh "nohup java -jar target/${JAR_NAME} > app.log 2>&1 &"
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline ex√©cut√© avec succ√®s !'
        }
        failure {
            echo '‚ùå Erreur dans le pipeline.'
        }
    }
}
